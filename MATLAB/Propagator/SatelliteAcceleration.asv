function [ dY ] = SatelliteAcceleration( t, Y, mu, pointingTarget_ECEF, sat_M_mat, sat_I_mat, sat_rw_rotMat )

disp("Entering SatelliteAcceleration")

r_ECI = Y(1:3);
v_ECI = Y(4:6);
q_ECI = Y(7:10);
w_sat_ECI = Y(11:13);
w_rw = Y(14:17);

a_Keplerian = TransAcc_Newton( mu, Y(1:3) );

r0_ECEF = posECIToECEF(t, r_ECI);

targetVec_ECEF = getPointingVector(r0_ECEF, pointingTarget_ECEF);
targetVec_ECI = posECEFToECI(t, targetVec_ECEF);

refRotMat = getReferenceFrame( targetVec_ECI, v_ECI );
qRef = rotm2quat( refRotMat );

% Error variables describe rotation from qurrent attitude to reference
% attitude.
qError = QuaternionError(qRef, q_ECI);

if norm(qError) > 1

rotMatError = RotMat_Quaternion( qError );
[ xAngleError, yAngleError, zAngleError ] = RotMatToEuler( rotMatError );

rdot = v_ECI;
vdot = a_Keplerian;
qdot =  0.5*Omega_w(w_sat_ECI)*q_ECI;
wdot_sat = 0.5 .* eye(3,3) * [ xAngleError; yAngleError; zAngleError ];

wdot_rw = zeros(4,1);

disp(" Exiting SatelliteAcceleration")

dY = [ rdot; vdot; qdot; wdot_sat; wdot_rw ];

end

